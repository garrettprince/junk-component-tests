import Head from "next/head";
import Image from "next/image";
import CardTest from "../components/CardTest";
import CardTest2 from "../components/CardTest2";
import CardTest3 from "../components/CardTest3";
import CardComponentTest from "../components/CardComponentTest";
import { ChevronRightIcon, DotsHorizontalIcon } from "@heroicons/react/solid";
import FormTest from "../components/FormTest";

export default function Home() {
  return (
    <div className="">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex justify-center mt-20">
        <FormTest />
        <section className="flex-col h-full bg-gray-300/40 rounded-[2rem] mx-4">
          <div className="flex justify-between mx-7 mt-4">
            <h1 className="text-3xl font-semibold">In Progress</h1>
            <div className="flex items-center space-x-4">
              <DotsHorizontalIcon className="h-8 w-8 cursor-pointer text-gray-500" />
              <ChevronRightIcon className="h-10 w-10 cursor-pointer text-gray-500" />
            </div>
          </div>
          <CardTest />
          <CardComponentTest
            title="This is a test to see something"
            description="This is also another test to see what it would look like to use props instead of everything being static. Though I do not know how to do line breaks which I will need to find out."
            category={"Dev".toUpperCase()}
            dueDate={"DUE 7/20".toUpperCase()}
            minutesDuration="45"
          />
          <CardTest2 />
          <CardTest3 />
        </section>
      </div>
    </div>
  );
}

/*
const columns = [
  'not started',
  'in progress',
  'complete',
]

const cardsList = [
  {
    title,
    description,
    status,
    etc...
  }
]

const [cards, setCards] = useState(cardList)
*/

// Index <KanbanContainer />

// KanbanContainer -> columns.map((column) => (<Column title={column.title} cards={cards.filter(card => card.status === column.title)} /> )), Add Card Modal, setCards([...cards, { new card }])

// State for the modal const [open, isOpen] = useState(false), {isOpen && <AddCardModal />}

//    Inside the column component: 
{/* <Card  >  */}

